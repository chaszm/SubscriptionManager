@model IEnumerable<SubscriptionManager.Models.Subscription>





@{
    ViewBag.Title = "Current Subscriptions: ";
}


<script src="https://cdn.jsdelivr.net/npm/apexcharts"></script>


<div class="card rounded">
    <br />
    <div class="row" style="background-color: white; border-radius: 15px;">
        <!-- Revenue Card -->
        <div class="col-xxl-6 col-md-6">
            <div class="card info-card revenue-card">
                <div class="filter">
                    <a class="icon" href="#" data-bs-toggle="dropdown"><i class="bi bi-three-dots"></i></a>
                    <ul class="dropdown-menu dropdown-menu-end dropdown-menu-arrow">
                        <li class="dropdown-header text-start">
                            <h6>Filter</h6>
                        </li>
                        <li><a class="dropdown-item" href="#">Today</a></li>
                        <li><a class="dropdown-item" href="#">This Month</a></li>
                        <li><a class="dropdown-item" href="#">This Year</a></li>
                    </ul>
                </div>
                <div class="card-body">
                    <h5 class="card-title" style="font-size: 2rem; font: bold">Amount Spent <span>| This Year</span></h5>
                    <div class="d-flex align-items-center">
                        <div class="card-icon rounded-circle d-flex align-items-center justify-content-center">
                            <i class="bi bi-currency-dollar"></i>
                        </div>
                        <div class="ps-3">
                            <h6 style="font: bold">$@ViewBag.totalAmount </h6>

                        </div>
                    </div>
                </div>
            </div>



            <div id="barChart"></div>

            <script>
            document.addEventListener("DOMContentLoaded", () => {
                new ApexCharts(document.querySelector("#barChart"), {
                    series: [{
                        data: [@ViewBag.JanuaryAmount, @ViewBag.FebruaryAmount, @ViewBag.MarchAmount, @ViewBag.AprilAmount,@ViewBag.MayAmount, @ViewBag.JuneAmount, @ViewBag.JulyAmount, @ViewBag.AugustAmount, @ViewBag.SeptemberAmount, @ViewBag.OctoberAmount,@ViewBag.NovemberAmount,@ViewBag.DecemberAmount]
                    }],
                    chart: {
                        type: 'bar',
                        height: 350,
                        toolbar: {
                            show: false
                        }
                    },
                    plotOptions: {
                        bar: {
                            borderRadius: 4,
                            horizontal: true,
                        }
                    },
                    dataLabels: {
                        enabled: false
                    },
                    xaxis: {
                        categories: [
                            'January', 'February', 'March', 'April', 'May', 'June',
                            'July', 'August', 'September', 'October', 'November', 'December'
                        ],
                    }
                }).render();
            });
            </script>

        </div>

        <div class="col-xxl-6 col-md-6" style=background-color: white">
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title" style="font-size: 2rem; font: bold">Spending by Category</h5>
                    <div id="donutChart"></div>
                    <script>
                    document.addEventListener("DOMContentLoaded", () => {
                        new ApexCharts(document.querySelector("#donutChart"), {
                            series: [@ViewBag.EntertainmentAmount, @ViewBag.FoodAmount, @ViewBag.HealthAmount, @ViewBag.TechAmount, @ViewBag.OtherAmount],
                            chart: {
                                height: 350,
                                type: 'donut',
                                toolbar: {
                                    show: true
                                }
                            },
                            labels: ['Entertainment', 'Food Delivery/Meal Kits', 'Health and Fitness', 'Technologies', 'Other'],
                        }).render();
                    });
                    </script>
                </div>
            </div>
        </div>
    </div>


    <div class="card-body">
        <h2 class="card-title" style="font-size: 2rem; font: bold">Current Subscriptions</h2>
        <p class="text-end">
            <a href="@Url.Action("Create", "Subscriptions")" class="btn btn-primary">Add a Subscription</a>
        </p>



        <!-- Add filter buttons, AND "show _ per page" pagination-->
        <table class="table table-bordered table-dark" style="border: 4px solid black; background-color: white;">
            <thead style=" background-color: #adb5bd;">
                <tr>
                    <th scope="col">
                        @Html.DisplayNameFor(model => model.name)
                    </th>
                    <th scope="col">
                        @Html.DisplayNameFor(model => model.category)
                    </th>
                    <th scope="col">
                        @Html.DisplayNameFor(model => model.amount)
                    </th>
                    <th scope="col">
                        @Html.DisplayNameFor(model => model.length)
                    </th>
                    <th scope="col">
                        @Html.DisplayNameFor(model => model.startDate)
                    </th>
                    <th scope="col">
                        @Html.DisplayNameFor(model => model.status)
                    </th>
                    <th scope="col">
                        @Html.DisplayNameFor(model => model.siteLink)
                    </th>
                    <th>Actions</th>
                </tr>
            </thead>

            <tbody>
                @foreach (var item in Model)        //Displays each individual subscription (item) and their properties
                {                                   // Change so that displayed based on category
                    <tr>
                        <td>
                            <strong>@Html.DisplayFor(modelItem => item.name)</strong>
                        </td>



                        <td>
                            @Html.DisplayFor(modelItem => item.category)
                        </td>

                        <td>
                            $
                            @Html.DisplayFor(modelItem => item.amount)
                        </td>

                        <td>
                            @Html.DisplayFor(modelItem => item.length)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.startDate)
                        </td>
                        <td>


                            @if (item.status == "Active")
                            {
                                <span style="height: 10px; width: 10px; border-radius: 50%; display: inline-block; background-color: green;"></span>
                            }
                            else if (item.status == "Cancelled")
                            {
                                <span style="height: 10px; width: 10px; border-radius: 50%; display:inline-block; background-color: red; "></span>
                            }
                            @Html.DisplayFor(modelItem => item.status)

                        </td>
                        <td>
                            <a href="@item.siteLink">@item.siteLink</a>
                        </td>
                        <td>

                            <div class="btn-group" role="group" aria-label="...">
                                @Html.ActionLink(" ", "Details", new { id = item.Id }, new { @class = "btn btn-default glyphicon glyphicon-list", @aria_hidden = "true" })
                                @Html.ActionLink(" ", "Details", new { id = item.Id }, new { @class = "btn btn-default glyphicon glyphicon-pencil", @aria_hidden = "true" })
                                @Html.ActionLink(" ", "Delete", new { id = item.Id }, new { @class = "btn btn-default glyphicon glyphicon-remove", @aria_hidden = "true" })
                            </div>


                        </td>
                    </tr>
                }
            </tbody>

        </table>

    </div>



</div>










